<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RandoBot.Service</name>
    </assembly>
    <members>
        <member name="T:RandoBot.Service.Program">
            <summary>
            The program class which bootstrap the applicaiton.
            </summary>
        </member>
        <member name="M:RandoBot.Service.Program.Main(System.String[])">
            <summary>
            The main entry point.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:RandoBot.Service.Startup">
            <summary>
            The startup class.
            </summary>
        </member>
        <member name="M:RandoBot.Service.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initialize a new instance of the <see cref="T:RandoBot.Service.Startup"/> class
            </summary>
            <param name="env">The environment.</param>
        </member>
        <member name="P:RandoBot.Service.Startup.Configuration">
            <summary>
            The configuration.
            </summary>
        </member>
        <member name="M:RandoBot.Service.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="services">The services to configure.</param>
        </member>
        <member name="M:RandoBot.Service.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Configures the application.
            </summary>
            <param name="app">The application to configure.</param>
            <param name="env">The environment to configure.</param>
            <param name="loggerFactory">The log factory to configure.</param>
        </member>
        <member name="P:RandoBot.Service.Models.Picture.UserId">
            <summary>
            The user identifier.
            </summary>
        </member>
        <member name="P:RandoBot.Service.Models.Picture.Created">
            <summary>
            The created datetime.
            </summary>
        </member>
        <member name="P:RandoBot.Service.Models.Picture.PublicId">
            <summary>
            The public identifier.
            </summary>
        </member>
        <member name="T:RandoBot.Service.Models.User">
            <summary>
            The user class.
            </summary>
        </member>
        <member name="P:RandoBot.Service.Models.User.UserId">
            <summary>
            The user identifier.
            </summary>
        </member>
        <member name="P:RandoBot.Service.Models.User.FirstName">
            <summary>
            The first name.
            </summary>
        </member>
        <member name="P:RandoBot.Service.Models.User.LastName">
            <summary>
            The last name.
            </summary>
        </member>
        <member name="P:RandoBot.Service.Models.User.Email">
            <summary>
            The email.
            </summary>
        </member>
        <member name="P:RandoBot.Service.Models.User.Created">
            <summary>
            The created datetime.
            </summary>
        </member>
        <member name="T:RandoBot.Service.Repositories.IPictureRepository">
            <summary>
            The picture repository.
            </summary>
        </member>
        <member name="M:RandoBot.Service.Repositories.IPictureRepository.GetRandomPictureAsync">
            <summary>
            Gets a random picture URL.
            </summary>
            <returns>The URL of the picture.</returns>
        </member>
        <member name="M:RandoBot.Service.Repositories.IPictureRepository.CreatePictureAsync(System.String,System.String)">
            <summary>
            Creates a picture based on the original URL..
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="originalUrl">The original URL.</param>
        </member>
        <member name="T:RandoBot.Service.Repositories.IUserRepository">
            <summary>
            The interface of the user repository.
            </summary>
        </member>
        <member name="M:RandoBot.Service.Repositories.IUserRepository.GetUserAsync(System.String)">
            <summary>
            Gets an existing user.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>The user if found otherwise null.</returns>
        </member>
        <member name="M:RandoBot.Service.Repositories.IUserRepository.InsertUserAsync(RandoBot.Service.Models.User)">
            <summary>
            Inserts a new user.
            </summary>
            <param name="user">The user to insert.</param>
            <returns>The user.</returns>
        </member>
        <member name="T:RandoBot.Service.Repositories.MongoRepository">
            <summary>
            Base class for mongo db repositories.
            </summary>
        </member>
        <member name="P:RandoBot.Service.Repositories.MongoRepository.Client">
            <summary>
            The db client.
            </summary>
        </member>
        <member name="P:RandoBot.Service.Repositories.MongoRepository.Db">
            <summary>
            The db.
            </summary>
        </member>
        <member name="M:RandoBot.Service.Repositories.MongoRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RandoBot.Service.Repositories.UserRepository"/> class.
            </summary>
        </member>
        <member name="T:RandoBot.Service.Repositories.PictureRepository">
            <summary>
            The picture repository.
            </summary>
        </member>
        <member name="M:RandoBot.Service.Repositories.PictureRepository.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RandoBot.Service.Repositories.PictureRepository"/> class.
            </summary>
        </member>
        <member name="M:RandoBot.Service.Repositories.PictureRepository.CreatePictureAsync(System.String,System.String)">
            <summary>
            Creates a new picture.
            </summary>
            <param name="userId">The user identity.</param>
            <param name="originalUrl">The original URL.</param>
        </member>
        <member name="M:RandoBot.Service.Repositories.PictureRepository.GetRandomPictureAsync">
            <summary>
            Gets a random picture.
            </summary>
            <returns>The picture URL.</returns>
        </member>
        <member name="T:RandoBot.Service.Repositories.UserRepository">
            <summary>
            The user repository class.
            </summary>
        </member>
        <member name="M:RandoBot.Service.Repositories.UserRepository.GetUserAsync(System.String)">
            <summary>
            Get the user.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>The user if found, otherwise null.</returns>
        </member>
        <member name="M:RandoBot.Service.Repositories.UserRepository.InsertUserAsync(RandoBot.Service.Models.User)">
            <summary>
            Insert the user into the database.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="T:PriceTagCloud.Service.Controllers.FacebookController">
            <summary>
            The FacebookController class.
            </summary>
        </member>
        <member name="M:PriceTagCloud.Service.Controllers.FacebookController.#ctor(Microsoft.Extensions.Logging.ILogger{PriceTagCloud.Service.Controllers.FacebookController},Messenger.Client.Services.IMessengerMessageSender,RandoBot.Service.Repositories.IUserRepository,RandoBot.Service.Repositories.IPictureRepository)">
            <summary>
            Initializes a new instance of the FacebookController class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="messageSender">The message sender.</param>
            <param name="userRepository">The user repository.</param>
            <param name="pictureRepository">The picture repository.</param>
        </member>
        <member name="M:PriceTagCloud.Service.Controllers.FacebookController.Validate">
            <summary>
            Validates the sender.
            </summary>
            <returns>The response.</returns>
        </member>
        <member name="M:PriceTagCloud.Service.Controllers.FacebookController.HandleMessage(Messenger.Client.Objects.MessengerObject)">
            <summary>
            Handles the message.
            </summary>
            <param name="obj">The message object.</param>
            <returns>The response.</returns>
        </member>
    </members>
</doc>
